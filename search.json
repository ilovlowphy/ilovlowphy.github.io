[{"title":"在Ubuntu18.04上编译salome","url":"/2020/01/09/在Ubuntu18-04上编译salome-1/"},{"title":"在Ubuntu18.04上编译salome","url":"/2020/01/09/在Ubuntu18-04上编译salome/","content":"\n在Ubuntu18.04版本上编译salome, 记录过程如下:\n## 下载 salome\n下载地址:[https://www.salome-platform.org/downloads/current-version](https://www.salome-platform.org/downloads/current-version)\n\n选择 [Linux Ubuntu 18.04 64-bits](https://www.salome-platform.org/downloads/current-version/DownloadDistr?platform=OS1.UB18.04&version=9.3.0)版本, 软件包内不仅包含了开箱即用的salome版本(BINARIES-UB18.04文件夹内), 还包含所有的源代码(ARCHIVES文件夹内), 以及sat工具包(salomeTools文件夹内). 详细内容可查看根目录下的readme文件. \n\n安装OPENGL请参考[https://www.jianshu.com/p/f34fea694300?utm_source=oschina-app](https://www.jianshu.com/p/f34fea694300?utm_source=oschina-app)\n\n安装libgfortran4:\n```\n$sudo apt-get install libgfortran4:amd64\n```\n解压, 在解压目录里运行`./salome`即可启动开箱即用的salome\n\n## sat工具包\n`sat`是salome工具包, 可以用于准备, 编译, 测试等等\n>The SalomeTools (sat) is a suite of commands that can be used to perform operations on SALOME 1 .\nFor example, sat allows you to compile SALOME’s codes (prerequisites, products) create application, run tests,create package, etc.\n\n相关说明可以查看SALOME-xx/salometools目录下的pdf文件夹里的pdf说明(以上引用出自该文档)\n\n运行`./sat`命令时, 可能会出现Command 'python' not found错误, 系统本身已经默认安装了python3.6, 需要创建一个软连接,操作如下:\n```\n$cd /usr/bin\n$sudo ln -s python3.6 python\n```\n>–help or -h\nGet help as simple text.\nsat --help # get the list of existing commands\nsat --help compile # get the help on a specific command 'compile'\n\n>–debug or -g\nExecution in debug mode allows to see more trace and stack if an exception is raised.\n–verbose or -v\nChange verbosity level (default is 3).\n\\# for product 'SALOME_xx' for example\n\\# execute compile command in debug mode with trace level 4\nsat -g -v 4 compile SALOME_xx\n\n>Use sat -t to duplicate the logs in the terminal (by default the log are stored and displayed with sat log\ncommand):\nsat -t compile <application> --products <product1>\n## salome安装\n```\n$./sat prepare SALOME-9.3.0 #准备安装包,将ARCHIVES文件下的压缩包解压至SOURCES目录下\n$./sat compile SALOME-9.3.0 --stop_first_fail #编译安装salome. Stop the compilation as soon as the compilation of a module fails\n```\n如果那个安装包未安装成功单独运行\n```\n$./sat -t -v 4 compile SALOME-9.3.0 --product <product1>\n```\n在输出中查看问题出在哪里, 多数原因是缺少必要的依赖包.\n\n可以apt-file工具, 该软件可以查找所需的文件在哪个软件包中,  详情查看下边连接\n[https://www.jianshu.com/p/9fd19418cf83](https://www.jianshu.com/p/9fd19418cf83)\n也可从下方网站搜索缺失的文件属于那个安装包\n[https://packages.ubuntu.com/search?suite=xenial&section=all&arch=any&keywords=libTKService.so&searchon=contents](https://packages.ubuntu.com/search?suite=xenial&section=all&arch=any&keywords=libTKService.so&searchon=contents)\n\n例如使用如下命令搜索libTKService.so\n```\n$sudo apt-file search libTKService.so\n```\n>带dev的包(如python-dev,libdianewcanvas2-dev等)包含了头文件和静态库。\n\n>For the first product in compilation error, you can check in the LOGS directory its compilation log to see where the error comes from.\nUsually, it is because an included file is missing in the system. So use apt-file search to search in which package this file belongs. Then apt-get install the missing package.\nThen launch again the compilation of the product, for instance:\n./sat compile SALOME-8.4.0 --stop_first_fail -p sip\n[来源](https://www.salome-platform.org/forum/forum_9/890484993)\n\n\n\n### 所需安装包汇总\n软件包编译时出现的错误基本都是由于缺少必要的依赖包造成, 现将其汇总在下方:\n```\n$sudo apt-get install flex bison zlib1g zlib1g.dev pkg-config gfortran libboost-all-dev libbz2-dev liboce-visualization11 liboce-visualization-dev automake\n```\n\n--------------------------------------以下可以不用看----------------------------------------\n## 安装时遇到的问题\n### doxygen\n编译doxygen时遇到如下错误:\n```\nCMake Error at /home/jj/SALOME-9.3.0-UB18.04-SRC/INSTALL/cmake/share/cmake-3.12/Modules/FindPackageHandleStandardArgs.cmake:137 (message):\n  Could NOT find FLEX (missing: FLEX_EXECUTABLE)\n```\n解决方法:\n```\n$sudo apt-get install flex bison\n```\n\n### python\n安装python时遇到如下错误:\n```\nzipimport.ZipImportError: can't decompress data; zlib not available\n```\n\n解决方法:\n```\n$ sudo apt-get install zlib1g\n$ sudo apt-get install zlib1g.dev\n```\n### mesa\n安装mesa时遇到如下错误:\n```\nconfigure: error: The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n```\n解决方法:\n```\n$sudo apt-get install pkg-config\n```\n### lapack\n安装lapack时遇到如下错误:\n```\n-- The Fortran compiler identification is unknown\nCMake Error at CMakeLists.txt:3 (project):\n  No CMAKE_Fortran_COMPILER could be found.\n```\n解决方法:\n安装Fortran编译器\n```\n$sudo apt-get install gfortran\n```\n\n### boost\n\n[https://www.cnblogs.com/qq952693358/p/8563048.html](https://www.cnblogs.com/qq952693358/p/8563048.html)\n在安装boost时遇到如下错误：\n\n```\ngcc.compile.c++ bin.v2/libs/iostreams/build/gcc-4.9.4/release/link-static/threading-multi/bzip2.o\nlibs/iostreams/src/bzip2.cpp:20:56: fatal error: bzlib.h: No such file or directory\n #include \"bzlib.h\"  // Julian Seward's \"bzip.h\" header.\n                                                        ^\ncompilation terminated.\n```\n搜索后发现Boost依赖bzlib.h尚未安装，通过以下步骤解决问题：\n```\n$sudo apt-get install libboost-all-dev\n$sudo apt-get install libbz2-dev\n```\n\n### CAS\n安装CAS时遇到如下错误:\n```\nsrc/TKService/CMakeFiles/TKService.dir/build.make:440: recipe for target 'lin64/gcc/lib/libTKService.so.7.3.0' failed\n```\n安装缺失的软件包\n```\n$sudo apt-get install liboce-visualization11 liboce-visualization-dev\n```\n### netgen\n```\nscripts/netgen_5_3_1.sh: line 13: aclocal: command not found\nerror on manual call to aclocal\n```\n```\n$sudo apt-get install automake\n```"}]